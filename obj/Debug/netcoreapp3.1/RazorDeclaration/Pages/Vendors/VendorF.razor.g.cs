// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace Tamin.Pages.Vendors
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "D:\Programming\Tamin-New\Pages\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Programming\Tamin-New\Pages\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\Programming\Tamin-New\Pages\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\Programming\Tamin-New\Pages\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\Programming\Tamin-New\Pages\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\Programming\Tamin-New\Pages\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\Programming\Tamin-New\Pages\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "D:\Programming\Tamin-New\Pages\_Imports.razor"
using Tamin;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "D:\Programming\Tamin-New\Pages\_Imports.razor"
using Tamin.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "D:\Programming\Tamin-New\Pages\_Imports.razor"
using System.IO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "D:\Programming\Tamin-New\Pages\_Imports.razor"
using Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "D:\Programming\Tamin-New\Pages\_Imports.razor"
using Entities;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "D:\Programming\Tamin-New\Pages\_Imports.razor"
using System.Linq.Dynamic;

#line default
#line hidden
#nullable disable
#nullable restore
#line 16 "D:\Programming\Tamin-New\Pages\_Imports.razor"
using Telerik.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 17 "D:\Programming\Tamin-New\Pages\_Imports.razor"
using Telerik.Blazor.Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 18 "D:\Programming\Tamin-New\Pages\_Imports.razor"
using Telerik.Documents;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\Programming\Tamin-New\Pages\Vendors\VendorF.razor"
using Tamin.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\Programming\Tamin-New\Pages\Vendors\VendorF.razor"
using Tamin.Data.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\Programming\Tamin-New\Pages\Vendors\VendorF.razor"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\Programming\Tamin-New\Pages\Vendors\VendorF.razor"
using Dapper;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\Programming\Tamin-New\Pages\Vendors\VendorF.razor"
using System.ComponentModel.DataAnnotations;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\Programming\Tamin-New\Pages\Vendors\VendorF.razor"
using Telerik.Blazor.Components.Upload;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Components.RouteAttribute("/VendorForm")]
    public partial class VendorF : global::Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 394 "D:\Programming\Tamin-New\Pages\Vendors\VendorF.razor"
      


    public string SaveUrl => ToAbsoluteUrl("api/upload/save");
    public string RemoveUrl => ToAbsoluteUrl("api/upload/remove");
    public List<string> AllowedExtensions { get; set; } = new List<string>() { ".pdf", ".docx" };

    public string ToAbsoluteUrl(string url)
    {
        return $"{NavigationManager.BaseUri}{url}";
    }


    public string email = "";
    public string value = "";
    public bool i;
    private VendorInPut newVendor = new VendorInPut();
    private ActivityOutPut newActivity = new ActivityOutPut();
    bool checkvalidation { get; set; }
    private List<ActivityOutPut> activity { get; set; } = new List<ActivityOutPut>();
    private List<VendorInPut> vendor;
    List<string> activitylist { get; set; } = new List<string>();
    List<Groups> group { get; set; } = new List<Groups>();
    List<string> Check { get; set; } = new List<string>();

    protected override async Task OnInitializedAsync()

    {

        vendor = await _dbVendorData.GetVendors();
        activity = await _dbActivityData.GetActivity();
        group = await _dbGroupsData.GetGroup();
        Check = vendor.Select(m => m.EMail).ToList();
    }


    public async Task LogEmail()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        var currentUser = await UserManager.GetUserAsync(user);
        email = currentUser.Email;

        for (int e = 0; e < Check.Count; e++)
        {
            if (Check[e] == email)
            {

                value = Check[e];
            }
        }
        if (value=="")
        {
            i = true;
        }
        else
        {
            i = false;
        }

    }

    private string StatusMessage;
    private string StatusClass;

    private async Task InsertVendors()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        var currentUser = await UserManager.GetUserAsync(user);
        email = currentUser.Email;
        DateTime dateAndTime = DateTime.Now;
        newVendor.Date = (dateAndTime.ToString("yyyy/MM/dd"));

        VendorInPut v = new VendorInPut
        {
            Name = newVendor.Name,
            ManagerName = newVendor.ManagerName,
            Phone = newVendor.Phone,
            Address = newVendor.Address,
            Fax = newVendor.Fax,
            MailBox = newVendor.MailBox,
            EMail = email,
            CheckRegistrationNo = newVendor.CheckRegistrationNo,
            RegistrationNo = newVendor.RegistrationNo,
            CheckEconomicCode = newVendor.CheckEconomicCode,
            EconomicCode = newVendor.EconomicCode,
            PostalCode = newVendor.PostalCode,
            WebSite = newVendor.WebSite,
            CheckNatioalId = newVendor.CheckNatioalId,
            NatioalId = newVendor.NatioalId,
            Catalog = newVendor.Catalog,
            HasCooperationResume = newVendor.HasCooperationResume,
            CooperationResume = newVendor.CooperationResume,
            VendorListResume = newVendor.VendorListResume,
            ActivityDescription = newVendor.ActivityDescription,
            Description = newVendor.Description,
            Activities = newVendor.Activities,
            Date = newVendor.Date,
            Groups = newVendor.Groups

        };

        if (checkvalidation == false)
        {
            await _dbVendorData.InsertVendors(v);

            vendor.Add(v);

            newVendor = new VendorInPut();

            vendor = await _dbVendorData.GetVendors();

            var LastId = vendor.Select(a => a.Id).LastOrDefault();

            if (newVendor.Groups == "کالایی")
            {

                AssessmentFC vId = new AssessmentFC
                {
                    Id = LastId
                };
                AssessmentSC vId2 = new AssessmentSC
                {
                    Id = LastId
                };
                await _dbAssessmentFCData.InsertAssessmentFC(vId);
                await _dbAssessmentSCData.InsertAssessmentSC(vId2);

            }
            else if (newVendor.Groups == "خدماتی")
            {
                AssessmentSC vId = new AssessmentSC
                {
                    Id = LastId
                };
                AssessmentSS vId2 = new AssessmentSS
                {
                    Id = LastId
                };
                await _dbAssessmentSCData.InsertAssessmentSC(vId);
                await _dbAssessmentSSData.InsertAssessmentSS(vId2);
            }
            else
            {
                AssessmentFC vId = new AssessmentFC
                {
                    Id = LastId
                };
                AssessmentSC vId2 = new AssessmentSC
                {
                    Id = LastId
                };
                AssessmentSC vId3 = new AssessmentSC
                {
                    Id = LastId
                };
                AssessmentSS vId4 = new AssessmentSS
                {
                    Id = LastId
                };

                await _dbAssessmentFCData.InsertAssessmentFC(vId);
                await _dbAssessmentSCData.InsertAssessmentSC(vId2);
                await _dbAssessmentSCData.InsertAssessmentSC(vId3);
                await _dbAssessmentSSData.InsertAssessmentSS(vId4);
            }

            StatusClass = "alert-success";
            StatusMessage = " اطلاعات شما با موفقیت ثبت شد";

        }
    }
    async Task OnSuccessHandler(UploadSuccessEventArgs e)
    {
        newVendor.Catalog= e.Files[0].Name;
        await OnInitializedAsync();
    }

    

#line default
#line hidden
#nullable disable
#nullable restore
#line 574 "D:\Programming\Tamin-New\Pages\Vendors\VendorF.razor"
     
        void toggle1()
        {
            newVendor.CheckRegistrationNo = !newVendor.CheckRegistrationNo;
        }
        void toggle2()
        {
            newVendor.CheckEconomicCode = !newVendor.CheckEconomicCode;
        }
        void toggle3()
        {
            newVendor.CheckNatioalId = !newVendor.CheckNatioalId;
        }
        void toggle4()
        {
            newVendor.HasCooperationResume = !newVendor.HasCooperationResume;
        }

    

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime JsInterop { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager NavigationManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime JSRuntime { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IAssessmentSSData _dbAssessmentSSData { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IAssessmentSCData _dbAssessmentSCData { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IAssessmentFSData _dbAssessmentFSData { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IAssessmentFCData _dbAssessmentFCData { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IGroupsData _dbGroupsData { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IActivityData _dbActivityData { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IVendorData _dbVendorData { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private UserManager<IdentityUser> UserManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private AuthenticationStateProvider AuthenticationStateProvider { get; set; }
    }
}
#pragma warning restore 1591
